{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (username, email, password, appPass, user_type) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/signupAdmin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password,\n        appPass,\n        user_type\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      //update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n\n      // update loading state\n      setIsLoading(false);\n    }\n  };\n  const signupUser = async (username, email, password, user_type) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/signupUser', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password,\n        user_type\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      //update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n\n      // update loading state\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    signupUser,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","error","setError","isLoading","setIsLoading","dispatch","signup","username","email","password","appPass","user_type","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload","signupUser"],"sources":["C:/Users/MRINAL/Documents/online_meeting/frontend2/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuthContext } from \"./useAuthContext\";\r\n\r\nexport const useSignup =()=>{\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(null)\r\n    const { dispatch } = useAuthContext()\r\n\r\n    const signup = async (username, email, password, appPass, user_type) => {\r\n        setIsLoading(true)\r\n        setError(null)\r\n\r\n        const response = await fetch('/signupAdmin',{\r\n            method: 'POST',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({username, email, password, appPass, user_type})\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        if(!response.ok){\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n\r\n        if(response.ok){\r\n              // save the user to local storage\r\n            localStorage.setItem('user',JSON.stringify(json))\r\n\r\n            //update the auth context\r\n            dispatch({type:'LOGIN', payload:json})\r\n\r\n             // update loading state\r\n             setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const signupUser = async (username, email, password, user_type) => {\r\n        setIsLoading(true)\r\n        setError(null)\r\n\r\n        const response = await fetch('/signupUser',{\r\n            method: 'POST',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({username, email, password, user_type})\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        if(!response.ok){\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n\r\n        if(response.ok){\r\n              // save the user to local storage\r\n            localStorage.setItem('user',JSON.stringify(json))\r\n\r\n            //update the auth context\r\n            dispatch({type:'LOGIN', payload:json})\r\n\r\n             // update loading state\r\n             setIsLoading(false)\r\n        }\r\n    }\r\n    return {signup,signupUser, isLoading, error}\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAE,MAAI;EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEO;EAAS,CAAC,GAAGN,cAAc,EAAE;EAErC,MAAMO,MAAM,GAAG,OAAOC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,KAAK;IACpEP,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAC;MACxCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAC;MAAkB,CAAC;MAC5CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACX,QAAQ;QAAEC,KAAK;QAAEC,QAAQ;QAAEC,OAAO;QAAEC;MAAS,CAAC;IACxE,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,EAAE;IAElC,IAAG,CAACP,QAAQ,CAACQ,EAAE,EAAC;MACZhB,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACiB,IAAI,CAAClB,KAAK,CAAC;IACxB;IAEA,IAAGW,QAAQ,CAACQ,EAAE,EAAC;MACT;MACFC,YAAY,CAACC,OAAO,CAAC,MAAM,EAACL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAEjD;MACAd,QAAQ,CAAC;QAACkB,IAAI,EAAC,OAAO;QAAEC,OAAO,EAACL;MAAI,CAAC,CAAC;;MAErC;MACAf,YAAY,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,MAAMqB,UAAU,GAAG,OAAOlB,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,EAAEE,SAAS,KAAK;IAC/DP,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAC;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAC;MAAkB,CAAC;MAC5CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACX,QAAQ;QAAEC,KAAK;QAAEC,QAAQ;QAAEE;MAAS,CAAC;IAC/D,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,EAAE;IAElC,IAAG,CAACP,QAAQ,CAACQ,EAAE,EAAC;MACZhB,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACiB,IAAI,CAAClB,KAAK,CAAC;IACxB;IAEA,IAAGW,QAAQ,CAACQ,EAAE,EAAC;MACT;MACFC,YAAY,CAACC,OAAO,CAAC,MAAM,EAACL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAEjD;MACAd,QAAQ,CAAC;QAACkB,IAAI,EAAC,OAAO;QAAEC,OAAO,EAACL;MAAI,CAAC,CAAC;;MAErC;MACAf,YAAY,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC;EACD,OAAO;IAACE,MAAM;IAACmB,UAAU;IAAEtB,SAAS;IAAEF;EAAK,CAAC;AAChD,CAAC;AAAA,GA/DYD,SAAS;EAAA,QAGGD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}